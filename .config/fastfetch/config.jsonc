{
    "$schema": "https://github.com/fastfetch-cli/fastfetch/raw/dev/doc/json_schema.json",
"logo": {
    "type": "kitty",
    "width": 1,
    "height": 1,
    "padding": {"top": 0}
},

    "display": {
        "separator": "",
        "color": {
            "separator": "1"
        },
        "constants": [
            "───────────────────────────"
        ],
        "key": {
            "type": "both",
            "paddingLeft": 4
        }
    },
    "modules": [
        "break",
        {
            "type": "custom",
            "format": "\u001b[32m┌─Hardware────────────────────────────────────────────┐\u001b[0m"
        },
        		{
    "type": "custom",
    "format": "\u001b[32m     System:\u001b[0m \u001b[34m             MoonBurst@ArchLinux\u001b[0m"
		},
		{
			"type": "command",
			"key": " ┌ CPU                ",
			"keyColor": "green",
			"text": "lscpu | grep \"Model name\" | awk -F': ' '{print $2}' | sed 's/Processor//' | xargs"
		},
        {
			"type": "command",
			"key": "󰾲 ├ GPU                ",
			"keyColor": "green",
			"text": "glxinfo | grep 'OpenGL renderer' | sed -E 's/^OpenGL renderer string: ([^(]+).*/\\1/'"
		},
        {
            "type": "memory",
            "key": " ├ Memory             ",
            "keyColor": "green"
        },
        {
            "type": "command",
            "key": "󰋊 └ Disk Usage Root    ",
            "keyColor": "green",
            "text": "df -h | grep '/$' | awk '{printf \"%-4s%5s /%5s (%s)\\n\", $6, $3, $2, $5}'"
        },
//        {
//            "type": "command",
//            "key": "󰋊 └ Disk Usage Home    ",
//            "keyColor": "green",
//            "text": "df -h | grep '/home$' | awk '{printf \"%-4s%5s /%5s (%s)\\n\", $6, $3, $2, $5}'"
//        },
        {
            "type": "custom",
            "format": "\u001b[32m└─────────────────────────────────────────────────────┘"
        },
        "break",
        {
            "type": "custom",
            "format": "\u001b[33m┌─Software────────────────────────────────────────────┐\u001b[0m"
        },
        
		{
		"type": "custom",
		"format": "    \u001b[33m󰣇 ┌ OS\u001b[0m                  Arch Linux"
		},

        {
            "type": "kernel",
            "key": " ├ Kernel              ",
            "keyColor": "yellow"
        },
        
        {
            "type": "command",
            "key": " ├ GPU Driver          ",
            "keyColor": "yellow",
            "text": "pacman -Q mesa | awk '{print $1, $2}' | sed -E 's/_.*//'"
        },
        {
            "type": "packages",
            "key": "󰏖 └ Packages            ",
            "keyColor": "yellow"
        },
        {
            "type": "custom",
            "format": "\u001b[33m└─────────────────────────────────────────────────────┘"
        },
        "break",
        {
            "type": "custom",
            "format": "\u001b[35m┌─Uptime / Age / DT───────────────────────────────────┐\u001b[0m"
        },
        {
            "type": "uptime",
            "key": " ┌  Uptime             ",
            "keyColor": "magenta"
        },
        {
            "type": "datetime",
            "key": " ├  DateTime           ",
            "keyColor": "magenta"
        },
        {
            "type": "command",
            "key": " └  Updates            ",
            "keyColor": "magenta",
            "text": "last_updated=$(stat -c %Y /var/lib/pacman/sync); uptime_since_update=$(( $(date +%s) - $last_updated )); printf \"Last Updated %dd %dh %dm ago\\n\" $(($uptime_since_update/86400)) $(($uptime_since_update%86400/3600)) $(($uptime_since_update%3600/60))"
        },
        {
            "type": "custom",
            "format": "\u001b[35m└─────────────────────────────────────────────────────┘"
        },
        "break",
        {
            "type": "colors",
            "symbol": "circle",
            "paddingLeft": 34
        },
    ]
}
